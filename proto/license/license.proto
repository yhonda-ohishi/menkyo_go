syntax = "proto3";

package license;

option go_package = "menkyo_go/proto/license";

// 免許証読み取りサービス
service LicenseReader {
  // 読み取った免許証データをプッシュ
  rpc PushLicenseData(LicenseData) returns (PushResponse);

  // 読み取りログをプッシュ
  rpc PushReadLog(ReadLog) returns (PushResponse);

  // ログ一覧を取得
  rpc GetLogs(GetLogsRequest) returns (GetLogsResponse);

  // 読み取り履歴を取得
  rpc GetReadHistory(GetReadHistoryRequest) returns (GetReadHistoryResponse);
}

// 免許証データ
message LicenseData {
  string card_id = 1;              // カードID
  string name = 2;                 // 氏名
  string name_kana = 3;            // 氏名（カナ）
  string birth_date = 4;           // 生年月日 (YYYY-MM-DD)
  string address = 5;              // 住所
  string issue_date = 6;           // 交付日 (YYYY-MM-DD)
  string expiry_date = 7;          // 有効期限 (YYYY-MM-DD)
  string license_number = 8;       // 免許証番号
  string license_type = 9;         // 免許種別
  bytes photo = 10;                // 顔写真データ
  int64 read_timestamp = 11;       // 読み取りタイムスタンプ (Unix時刻)
  string reader_id = 12;           // リーダーID
}

// 読み取りログ
message ReadLog {
  int64 timestamp = 1;             // タイムスタンプ
  string reader_id = 2;            // リーダーID
  string status = 3;               // ステータス (success/error)
  string error_message = 4;        // エラーメッセージ（エラー時）
  string card_id = 5;              // カードID（成功時）
}

// レスポンス
message PushResponse {
  bool success = 1;
  string message = 2;
  string request_id = 3;           // リクエストID
}

// ログ取得リクエスト
message GetLogsRequest {
  string reader_id = 1;            // リーダーID（省略時は全リーダー）
  string level = 2;                // ログレベル（INFO/WARNING/ERROR/DEBUG）
  int64 start_time = 3;            // 開始時刻（Unix時刻）
  int64 end_time = 4;              // 終了時刻（Unix時刻）
  int32 limit = 5;                 // 取得件数制限（デフォルト100）
}

// ログ取得レスポンス
message GetLogsResponse {
  repeated LogEntry logs = 1;
  int32 total_count = 2;           // 総件数
}

// ログエントリ
message LogEntry {
  int64 timestamp = 1;             // タイムスタンプ（Unix時刻）
  string level = 2;                // ログレベル
  string message = 3;              // ログメッセージ
  string reader_id = 4;            // リーダーID
}

// 読み取り履歴取得リクエスト
message GetReadHistoryRequest {
  string reader_id = 1;            // リーダーID（省略時は全リーダー）
  string status = 2;               // ステータス（success/error）
  int64 start_time = 3;            // 開始時刻（Unix時刻）
  int64 end_time = 4;              // 終了時刻（Unix時刻）
  int32 limit = 5;                 // 取得件数制限（デフォルト100）
}

// 読み取り履歴取得レスポンス
message GetReadHistoryResponse {
  repeated ReadHistoryEntry entries = 1;
  int32 total_count = 2;           // 総件数
}

// 読み取り履歴エントリ
message ReadHistoryEntry {
  int64 timestamp = 1;             // タイムスタンプ（Unix時刻）
  string reader_id = 2;            // リーダーID
  string card_id = 3;              // カードID
  string card_type = 4;            // カード種別
  string atr = 5;                  // ATR
  string expiry_date = 6;          // 有効期限
  string remain_count = 7;         // 残り回数
  string felica_uid = 8;           // FeliCa UID
  string status = 9;               // ステータス（success/error）
  string error_message = 10;       // エラーメッセージ
}
